install install.packages("rvest")
install.packages("rvest")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
lego_movie %>%
html_nodes("table") %>%
.[[3]] %>%
html_table()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(rvest)
WSwinners <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
head(WSwinners)
library(rvest)
library(rvest)
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
head(WSwinners)
WSwinners<-WSwinners[[1]]
print(WSwinners)
head(WSwinners)
WSwinners<-WSwinners[-1,]
head(WSwinners)
print(WSwinners)
###
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[-1,]
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
head(WSwinners)
WSwinners<-WSwinners[-1,]
WSwinners<-WSwinners[[-1,]]
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
WSwinners<-WSwinners[2:3]
head(WSwinners)
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
install.packages("plyr")
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
count(WSwinners,"WINNER")
count(WSwinners,"X2")
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-2,]
head(WSwinners)
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
WSwinners<-WSwinners[-1,]
head(WSwinners)
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-2,]
head(WSwinners)
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,] %>%WSwinners[-1,]
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
WSwinners<-WSwinners[-1,]
head(WSwinners)
clear
View(WSwinners)
View(WSwinners)
setwd("~/schoolwork/IntroToAnalytics/week3")
install.packages(c('tinytex', 'rmarkdown'))
tinytex::install_tinytex()
install.packages(c("tinytex", "rmarkdown"))
tinytex::install_tinytex()
unlink('week_3_cache', recursive = TRUE)
#i do this at the start of every file
rm(list=ls())
set.seed(10)
library(ggplot2)
library(forecast)
#read in data file
temp_data<-read.table("data/temps.txt",header = TRUE)
#convert to vector
temp_vec<-as.vector(unlist(temp_data[,2:21]))
plot(temp_vec)
#convert to timeseries
temp_ts<-ts(temp_vec,start = 1996,frequency = 123)
plot(temp_ts)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
set.seed(10)
library(ggplot2)
library(forecast)
#read in data file
temp_data<-read.table("data/temps.txt",header = TRUE)
#convert to vector
temp_vec<-as.vector(unlist(temp_data[,2:21]))
#convert to timeseries
temp_ts<-ts(temp_vec,start = 1996,frequency = 123)
plot(temp_ts)
autoplot(decompose(temp_ts))
autoplot(decompose(temp_ts))
autoplot(decompose(temp_ts))
#holtwinters model
hw_model<-HoltWinters(temp_ts,alpha = NULL, beta = NULL, gamma = NULL, seasonal = "multiplicative")
hw_model
#alpha, beta, and gamma values
cat("Alpha: ",hw_model$alpha,"\n")
cat("Beta: ",hw_model$beta,"\n")
cat("Gamma: ",hw_model$gamma,"\n")
#holtwinters model
hw_model<-HoltWinters(temp_ts,alpha = NULL, beta = NULL, gamma = NULL, seasonal = "multiplicative")
#alpha, beta, and gamma values
cat("Alpha: ",hw_model$alpha,"\n")
cat("Beta: ",hw_model$beta,"\n")
cat("Gamma: ",hw_model$gamma,"\n")
#holtwinters model
hw_model<-HoltWinters(temp_ts,alpha = NULL, beta = NULL, gamma = NULL, seasonal = "multiplicative")
#alpha, beta, and gamma values
cat("Alpha: ",hw_model$alpha,"\n")
cat("Beta: ",hw_model$beta,"\n")
cat("Gamma: ",hw_model$gamma,"\n")
#plot the model
plot(hw_model)
plot(hw_model)
plot(hw_model)
#plot the forecast of the model with the 80 and 95 confidence level
temp_forecast<-forecast(hw_model,h=123,level=c(80,95))
plot(temp_forecast, ylim = c(-40,140))
cusum<-function(df, mu, sigma, t){
S1<-0
calc<-rep(0,length(df))
all<-rep(0,length(df))
day<-0
for(i in 1:length(df)){
x<-df[i]
curr<-S1 + mu - x - sigma
S1<-max(c(0,curr))
calc[i]<-S1
if(S1 > t ){
day<-i
break
}
}
return(list(calc,day))
}
#convert to matrix to calculate cusum
m<-matrix(hw_model$fitted[,4],ncol=123)
avg<-colMeans(m)
mu0<-mean(avg)
sigma0<-sd(vg)
#convert to matrix to calculate cusum
m<-matrix(hw_model$fitted[,4],ncol=123)
avg<-colMeans(m)
mu0<-mean(avg)
sigma0<-sd(avg)
yr<-cusum(avg,mu0,sigma0,sigma0)
plot(yr[[1]], ylim = c(0,.2))
abline(h=sigma0, col="blue")
#convert to matrix to calculate cusum
m<-matrix(hw_model$fitted[,4],ncol=123)
avg<-colMeans(m)
mu0<-mean(avg)
sigma0<-sd(avg)
yr<-cusum(avg,mu0,sigma0,2*sigma0)
plot(yr[[1]], ylim = c(0,.2))
abline(h=sigma0, col="blue")
#convert to matrix to calculate cusum
m<-matrix(hw_model$fitted[,4],ncol=123)
avg<-colMeans(m)
mu0<-mean(avg)
sigma0<-sd(avg)
yr<-cusum(avg,mu0,sigma0,.5*sigma0)
plot(yr[[1]], ylim = c(0,.2))
abline(h=sigma0, col="blue")
#convert to matrix to calculate cusum
m<-matrix(hw_model$fitted[,4],ncol=123)
avg<-colMeans(m)
mu0<-mean(avg)
sigma0<-sd(avg)
yr<-cusum(avg,mu0,2*sigma0,sigma0)
plot(yr[[1]], ylim = c(0,.2))
abline(h=sigma0, col="blue")
#convert to matrix to calculate cusum
m<-matrix(hw_model$fitted[,4],ncol=123)
avg<-colMeans(m)
mu0<-mean(avg)
sigma0<-sd(avg)
yr<-cusum(avg,mu0,sigma0,.5*sigma0)
plot(yr[[1]], ylim = c(0,.2))
abline(h=sigma0, col="blue")
#use ARIMA model as well
arima_model <- auto.arima(temp_ts)
plot(forecast(arima_model, h=123))
